// Створення класу:
// Створіть клас Person, який має властивості name та age. Напишіть метод getInfo, який повертає рядок з інформацією про особу.

// Наслідування класів:
// Створіть клас Student, який наслідує від класу Person. Додайте нову властивість grade та оновіть метод getInfo так, щоб він включав інформацію про оцінку студента.

// Контекст функції:
// Створіть функцію printName, яка приймає параметр callback і викликає його з контекстом об'єкту { name: "John" }. Передайте до цієї функції звичайну функцію, яка виводить ім'я.

// Зміна контексту:
// Створіть об'єкт user з методом sayHello. Змініть контекст цього методу так, щоб він виводив Hello, {ім'я}! за допомогою властивості об'єкту user.

// Динамічна зміна контексту:
// Створіть функцію changeContext, яка приймає об'єкт та функцію. Викликайте цю функцію з контекстом, що передається, та перевірте, чи вона правильно викликає функцію.

// Клас зі статичним методом:
// Створіть клас Calculator зі статичним методом add, який приймає два числа та повертає їхню суму.

// Клас зі статичною властивістю:
// Створіть клас Counter зі статичною властивістю count, яка зберігає кількість екземплярів класу. Зробіть так, щоб при створенні нового екземпляру Counter, значення count збільшувалося на 1.

// Створення об'єкту за допомогою класу:
// Створіть клас Product, який має властивості name та price. Створіть об'єкт product1 за допомогою цього класу з ім'ям "Laptop" та ціною 1000.

// Використання super:
// Створіть батьківський клас Animal з методом makeSound. Створіть клас Dog, який наслідує від Animal і перевизначає метод makeSound, виводячи "Woof!"

// Контекст та методи об'єкту:
// Створіть об'єкт person з методом sayHello. Передайте цей метод як колбек до функції, де контекст виклику буде іншим об